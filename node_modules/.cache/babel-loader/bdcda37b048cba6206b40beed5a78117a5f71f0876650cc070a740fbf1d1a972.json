{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chatu\\\\OneDrive\\\\Desktop\\\\authuser\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [formType, setFormType] = useState('login'); // 'login' or 'signup'\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [error, setError] = useState('');\n  const validatePassword = pwd => {\n    const regex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    return regex.test(pwd);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate password if signing up\n    if (formType === 'signup') {\n      if (!validatePassword(password)) {\n        setError('Password must contain at least one number, one symbol, one uppercase letter, and one lowercase letter.');\n        return;\n      }\n      if (password !== confirmPassword) {\n        setError('Passwords do not match.');\n        return;\n      }\n    }\n\n    // Clear error message\n    setError('');\n\n    // Add your form submission logic here\n    console.log('Username:', username);\n    console.log('Password:', password);\n\n    // You can use axios or fetch here to submit the form data\n    // Example: await axios.post('/api/submit', { username, password });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: formType === 'login' ? 'Sign In' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPassword ? 'text' : 'password',\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"show-password\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: showPassword,\n              onChange: () => setShowPassword(!showPassword)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), \"Show Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), formType === 'signup' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm-password\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showConfirmPassword ? 'text' : 'password',\n              id: \"confirm-password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"show-password\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: showConfirmPassword,\n              onChange: () => setShowConfirmPassword(!showConfirmPassword)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), \"Show Confirm Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: formType === 'login' ? 'Sign In' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formType === 'login' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setFormType('signup'),\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setFormType('login'),\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"+s3YdGpum3s2S/YJbDCD6xDAvzk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","formType","setFormType","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","error","setError","validatePassword","pwd","regex","test","handleSubmit","e","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","checked","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chatu/OneDrive/Desktop/authuser/src/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formType, setFormType] = useState('login'); // 'login' or 'signup'\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const validatePassword = (pwd) => {\r\n        const regex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n        return regex.test(pwd);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Validate password if signing up\r\n        if (formType === 'signup') {\r\n            if (!validatePassword(password)) {\r\n                setError('Password must contain at least one number, one symbol, one uppercase letter, and one lowercase letter.');\r\n                return;\r\n            }\r\n            if (password !== confirmPassword) {\r\n                setError('Passwords do not match.');\r\n                return;\r\n            }\r\n        }\r\n        \r\n        // Clear error message\r\n        setError('');\r\n        \r\n        // Add your form submission logic here\r\n        console.log('Username:', username);\r\n        console.log('Password:', password);\r\n        \r\n        // You can use axios or fetch here to submit the form data\r\n        // Example: await axios.post('/api/submit', { username, password });\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-card\">\r\n                <h2>{formType === 'login' ? 'Sign In' : 'Sign Up'}</h2>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <div className=\"line-input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                required\r\n                            />\r\n                            <span className=\"line\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <div className=\"line-input\">\r\n                            <input\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                            <span className=\"line\"></span>\r\n                        </div>\r\n                        <label className=\"show-password\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={showPassword}\r\n                                onChange={() => setShowPassword(!showPassword)}\r\n                            />\r\n                            Show Password\r\n                        </label>\r\n                    </div>\r\n                    {formType === 'signup' && (\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n                            <div className=\"line-input\">\r\n                                <input\r\n                                    type={showConfirmPassword ? 'text' : 'password'}\r\n                                    id=\"confirm-password\"\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                                <span className=\"line\"></span>\r\n                            </div>\r\n                            <label className=\"show-password\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={showConfirmPassword}\r\n                                    onChange={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                />\r\n                                Show Confirm Password\r\n                            </label>\r\n                        </div>\r\n                    )}\r\n                    {error && <p className=\"error-message\">{error}</p>}\r\n                    <button type=\"submit\" className=\"login-button\">\r\n                        {formType === 'login' ? 'Sign In' : 'Sign Up'}\r\n                    </button>\r\n                </form>\r\n                <p>\r\n                    {formType === 'login' ? (\r\n                        <span>\r\n                            Don't have an account? <a href=\"#\" onClick={() => setFormType('signup')}>Sign Up</a>\r\n                        </span>\r\n                    ) : (\r\n                        <span>\r\n                            Already have an account? <a href=\"#\" onClick={() => setFormType('login')}>Sign In</a>\r\n                        </span>\r\n                    )}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}